/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jms.chat.privpub;

import java.awt.event.KeyEvent;
import javax.jms.JMSException;

/**
 *
 * @author Raj Kumar Rb
 */
public class MessagePanel extends javax.swing.JPanel implements MessageHandler {

    /**
     * Creates new form MessagePanel
     */
    public MessagePanel(MessageSender sender,MessageReceiver receiver,String user) {
        initComponents();
        recipientField.disable();
        receiver.setMessageHandler(this);
        this.sender=sender;
        this.user=user;
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        bottomPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        messageArea = new javax.swing.JTextArea();
        messageField = new javax.swing.JTextField();
        sendButton = new javax.swing.JButton();
        sendPrivate = new javax.swing.JCheckBox();
        recipientField = new javax.swing.JTextField();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        messageArea.setEditable(false);
        messageArea.setColumns(20);
        messageArea.setRows(5);
        jScrollPane1.setViewportView(messageArea);

        messageField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messageFieldActionPerformed(evt);
            }
        });
        messageField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                messageFieldKeyPressed(evt);
            }
        });

        sendButton.setText("Send");
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });

        sendPrivate.setText("Private");
        sendPrivate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendPrivateActionPerformed(evt);
            }
        });

        recipientField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recipientFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bottomPanelLayout = new javax.swing.GroupLayout(bottomPanel);
        bottomPanel.setLayout(bottomPanelLayout);
        bottomPanelLayout.setHorizontalGroup(
            bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(bottomPanelLayout.createSequentialGroup()
                .addGroup(bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, bottomPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(sendPrivate)
                        .addGap(17, 17, 17)
                        .addComponent(recipientField, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(messageField, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 4, Short.MAX_VALUE))
        );
        bottomPanelLayout.setVerticalGroup(
            bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bottomPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bottomPanelLayout.createSequentialGroup()
                        .addComponent(sendPrivate)
                        .addGap(0, 7, Short.MAX_VALUE))
                    .addGroup(bottomPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(recipientField)))
                .addGap(18, 18, 18)
                .addGroup(bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(messageField, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(sendButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bottomPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bottomPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
        // TODO add your handling code here:
        if(!messageField.getText().equals("")){
            try{
                String recAddr=sendPrivate.isSelected()? recipientField.getText():"all";
                sender.sendMessage(user+": "+ messageField.getText(),recAddr);
            }catch(JMSException ex){
                ex.printStackTrace();
                throw new RuntimeException(ex.getMessage());
            }
            
        }
        messageField.setText("");
    }//GEN-LAST:event_sendButtonActionPerformed

    private void messageFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messageFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_messageFieldActionPerformed

    private void messageFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_messageFieldKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            if(!messageField.getText().equals("")){
            try{
                 String recAddr=sendPrivate.isSelected()? recipientField.getText():"all";
                sender.sendMessage(user+": "+ messageField.getText(),recAddr);
            }catch(JMSException ex){
                ex.printStackTrace();
                throw new RuntimeException(ex.getMessage());
            }
            
            if(sendPrivate.isSelected()){
                handleMessage(user+": "+ messageField.getText());

            }
            messageField.setText("");
        }

        }
    }//GEN-LAST:event_messageFieldKeyPressed

    private void sendPrivateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendPrivateActionPerformed
        // TODO add your handling code here:
        if(sendPrivate.isSelected()){
            recipientField.enable();
        }else{
            recipientField.setText("");
            recipientField.disable();
        }
    }//GEN-LAST:event_sendPrivateActionPerformed

    private void recipientFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recipientFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_recipientFieldActionPerformed

   
    @Override
    public void handleMessage(String message) {
        String maString=messageArea.getText();
        maString=maString+"\r\n"+message;
        messageArea.setText(maString);
        
        
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bottomPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea messageArea;
    private javax.swing.JTextField messageField;
    private javax.swing.JTextField recipientField;
    private javax.swing.JButton sendButton;
    private javax.swing.JCheckBox sendPrivate;
    // End of variables declaration//GEN-END:variables
    private String user;
    private MessageSender sender;

}
